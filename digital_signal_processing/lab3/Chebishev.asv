


%Фильтр Чебышева
clc;
clear;

% NC=6; %полоса пропускания фильтра по уровню 0,7 амплитуды
% выражена в количестве отчетов спектра БПФ, пропускаемых фильтром
% остальные отсчеты (в частотном спектре!) будут ослабляться по амплитуде

%%% настройка сохранения в файл
fid = fopen('total_SKO.txt', 'w');

A=1; %амплитуда сигнала
Q=0.2; %амплитуда шума 0.1 вместо 0.001
KP1=5;% - количество периодов первого сигнала
KP2=15;% - количество периодов второго сигнала
N=1024;%количество точек расчета

e=2;%параметр фильтра Чебышева
% ПРОБЛЕМА КРОЕТСЯ ТУТ. НА 2 РАБОТАЕТ ИДЕАЛЬНО!

for NC=6:2:32
    q=randn(1,N); %генерация одномерного массива нормально распределенного шума

    for k=1:N % генерация сигнала и шума
        s(k) = A * abs(sin(2 * pi * KP1 * (k-1)/N));
        x(k)=s(k)+Q*q(k); % суммирование сигнала и шума
    end

%     figure
%     plot(x);
%     axis tight; %диапазон X и Y по осям точно соответствует Xmax и Kmax
%     title('Зашумленный сигнал до фильтра');
%     Y=fft(x,N); %БПФ сигнала с шумом
%     i=1:N/2;
% 
%     figure
%     % semilogy(i(1:200),2*abs(SS1(1:200)));
%     %plot(i(1:100),2*abs(SS1(1:100)));
%     plot(i(1:N/2),abs(Y(1:N/2)));
%     title('Частотный спектр сигнала с шумом');

    for i=1:N
        Tn=2*(i/NC)^2-1;%значение полинома Чебышёва 1 рода 2-го порядка
        H(i)=1/sqrt(1+e^2*Tn^2);%частотная характеристика фильтра Чебышева
    end

    h=ifft(H);
    i=1:N;
    
%     plot(i(1:20),abs(h(1:20))); %Импульсная характеристика фильтра
%     title('Импульсная характеристика фильтра');
%     i=1:200;

%     figure
%     plot(i,abs(H(1:200)));
%     %semilogx(i,abs(H(1:200)));%то же, что и plot, но в логарифмическом
%     %масштабе по Х
%     grid on;
%     title('Частотная хар-ка цифрового фильтра Чебышева');

    i=1:N;
    XX1=fft(x,N); %частотный спектр сигнала с шумом
    Z=ifft(XX1.*H);%свертка зашумленного сигнала с частотной хар-кой фильтра
    XX2=fft(s,N);%частотный спектр сигнала
    Z2=ifft(XX2.*H);%свертка незашумленного сигнала с частотной хар-кой фильтра
    DZ(i)=(2*real(Z(i))-2*real(Z2(i)))*100./(max(s)-min(s));%случайная погрешность
    DZ1(i)=(2*real(Z(i))-s(i))*100/(max(s)-min(s));%полная погрешность

    SKO_random=std(DZ);
    SKO_total=std(DZ1);
    
    fprintf(fid, '%2.0f %6.4f\n', b);
fprintf(fid, '%2.0f %6.4f\n', b);

%     out = ['NC=          ', int2str(NC)];
%     disp(out);
% 
%     out = ['SKO_random=  ', num2str(SKO_random)];
%     disp(out);
% 
%     out = ['SKO_total=   ', num2str(SKO_total)];
%     disp(out);
%     disp('----');

    i=1:N;
    yy=A*abs(sin((2 * pi * KP1*(i-1)/N)));


    figure
    plot(i,x); %вывод сигнала до фильтра
    title('Сигнал до фильтра');
    xlabel('Номер отсчета'); % подпись по оси X
    ylabel('Амплитуда'); % подпись по оси Y
    axis tight; %диапазон X и Y по осям точно соответствует Xmax и Ymax
    hold on; % "удержание" окна вывода для вывода следующего графика
    i=1:N;
    plot(i,2 * real(Z(1:N)),'r-'),grid; %вывод отфильтрованного сигнала
    %представление графика линией красного цвета, отображение сетки
    title('Сигнал до и после фильтра');%подпись названия графика
    hold off;

%     i=1:N;
%     figure
%     plot(i,DZ(1:N)); %вывод случайной погрешности отфильтрованного сигнала
%     title('Случайная погрешность отфильтрованного сигнала');
%     ylabel('Случайная погрешность, %'); % подпись по оси Y
%     axis tight;
%     i=1:N;

%     figure
%     plot(i,DZ1(1:N)); %вывод случайной погрешности отфильтрованного сигнала
%     title('Полная погрешность отфильтрованного сигнала');
%     ylabel('Полная погрешность, %'); % подпись по оси Y
%     axis tight;
end
status = fclose(fid);
pause;
close all;

